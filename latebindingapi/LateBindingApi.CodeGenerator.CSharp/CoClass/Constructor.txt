		#region Fields
		
		private NetRuntimeSystem.Runtime.InteropServices.ComTypes.IConnectionPoint _connectPoint;
		private string _activeSinkId;
		private NetRuntimeSystem.Type _thisType;
%sinkHelperDefine%	
		#endregion

		#region Type Information

        private static Type _type;
		
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public static Type LateBindingApiWrapperType
        {
            get
            {
                if (null == _type)
                    _type = typeof(%name%);
                    
                return _type;
            }
        }
        
        #endregion
        		
		#region Construction

        /// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
		public %name%(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
			%callQuitInDispose%%setGlobalInstance%
		}
		
		/// <param name="parentObject">object there has created the proxy</param>
        /// <param name="comProxy">inner wrapped COM proxy</param>
        /// <param name="comProxyType">Type of inner wrapped COM proxy"</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public %name%(COMObject parentObject, object comProxy, NetRuntimeSystem.Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
			%callQuitInDispose%
		}
		
		/// <param name="replacedObject">object to replaced. replacedObject are not usable after this action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public %name%(COMObject replacedObject) : base(replacedObject)
		{
			%callQuitInDispose%
		}
		
		/// <summary>
        /// creates a new instance of %name% 
        /// </summary>		
		public %name%():base("%ProgId%")
		{
			%callQuitInDispose%%setGlobalInstance%
		}
		
		/// <summary>
        /// creates a new instance of %name%
        /// </summary>
        /// <param name="progId">registered ProgID</param>
		public %name%(string progId):base(progId)
		{
			%callQuitInDispose%%setGlobalInstance%
		}
%disposeGlobalInstance%
		#endregion